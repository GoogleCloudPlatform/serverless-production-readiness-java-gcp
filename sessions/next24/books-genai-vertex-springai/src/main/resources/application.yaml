#
#  Copyright 2024 Google LLC
# 
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
# 
#  http://www.apache.org/licenses/LICENSE-2.0
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# /
management:
  endpoint:
    health:
      show-details: ALWAYS
  health:
    diskspace:
      enabled: false
  endpoints:
    enabled-by-default: true
    web:
      exposure:
        include: "*"
spring:
  main:
    lazy-initialization: true
  datasource:
    url: ${DB_URL}
    username: ${MY_USER}
    password: ${MY_PASSWORD}
  cloud:
    config:
      modelAnalysisName: ${MODEL_ANALYSIS_NAME:gemini-pro}
      modelImageProName: ${MODEL_IMAGE_PRO_NAME:gemini-pro-vision}
  ai:
    vertex:
      ai:
        gemini:
          project-id: ${VERTEX_AI_GEMINI_PROJECT_ID}
          location: ${VERTEX_AI_GEMINI_LOCATION}
          chat:
            options:
              model: ${MODEL:gemini-1.5-flash-001}
  threads:
    virtual:
      enabled: true
workflows:
  summary:
    chunk:
      characters: ${SUMMARY_CHUNK:55000}
prompts:
  bookanalysis: ${PROMPT_BOOK_ANALYSIS:Extract the main ideas from the book The Jungle Book by Rudyard Kipling}
  promptImage: ${PROMPT_IMAGE:Extract the title and author from the image, strictly in JSON format}
  promptSubSummary: ${PROMPT_SUBSUMMARY:Taking the following context delimited by triple backquotes into consideration ```%s``` Write a concise summary of the following text delimited by triple backquotes. ```%s``` CONCISE SUB-SUMMARY:}
  promptSummary: ${PROMPT_SUMMARY:Please give me a summary with an introduction, three one sentence bullet points, and a conclusion from the following text delimited by triple backquotes. ```Text:%s``` SUMMARY (Don't mention Project Gutenberg in summary):}
  promptTransformTF: >
    You are an expert in Google Cloud Platform (GCP), fluent in `gcloud` commands, 
    and deeply familiar with Terraform modules for GCP. Your task is to translate shell 
    scripts that utilize `gcloud` commands into equivalent, well-structured Terraform code.
  
    Please carefully analyze the provided bash script enclosed within triple backquotes ```{script}``` 
  
    Your output should include:
  
    1. **Complete Terraform Code:** A fully functional Terraform configuration file (.tf) 
       that replicates the functionality of the bash script. 
    2. **Explanation:** A clear breakdown of the Terraform resources, variables, and modules 
       used, along with explanations for how they achieve the same results as the original script.
    3. **Best Practices:** Where applicable, suggestions for adhering to Terraform best practices 
       (e.g., organization, resource naming, input validation).
    4. **Potential Optimizations:** If there are opportunities to make the Terraform code more 
       efficient, concise, or maintainable, please highlight them.
  
    **Important Considerations:**
  
    * **Environment Variables:** If the bash script relies on environment variables, ensure the 
       Terraform code handles them appropriately (e.g., using input variables, local values, or 
       data sources).
    * **Error Handling:** Terraform provides error handling mechanisms that may be missing in the 
       bash script. Incorporate these to improve the robustness of the code.
    * **State Management:** Briefly explain how Terraform state would be managed for this particular 
       configuration.
    * **Example Usage:** Demonstrates the intended format for providing the bash script to be converted. 
        ```bash
        PROJECT_ID="my-gcp-project"
        ZONE="us-central1-a"
        INSTANCE_NAME="web-server-01"
        MACHINE_TYPE="e2-medium"
        IMAGE="debian-cloud/debian-11"
    
        gcloud services enable vision.googleapis.com
        gcloud services enable cloudfunctions.googleapis.com
  
        gcloud compute instances create $INSTANCE_NAME \
        --project $PROJECT_ID \
        --zone $ZONE \
        --machine-type $MACHINE_TYPE \
        --image $IMAGE \
        --boot-disk-size 20GB
    
        export BUCKET_PICTURES=library_next24_images
        gsutil mb -l us-central1 gs://${BUCKET_PICTURES}
        gsutil uniformbucketlevelaccess set on gs://${BUCKET_PICTURES}
        gsutil iam ch allUsers:objectViewer gs://${BUCKET_PICTURES} 
        ```
