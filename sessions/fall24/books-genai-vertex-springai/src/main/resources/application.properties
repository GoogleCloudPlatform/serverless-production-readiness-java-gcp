
#
#  Copyright 2024 Google LLC
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# /
management.endpoint.health.show-details=ALWAYS
management.health.diskspace.enabled=false
management.endpoints.enabled-by-default=true
management.endpoints.web.exposure.include=*

spring.main.lazy-initialization=true

spring.datasource.url=${DB_URL}
spring.datasource.username=${MY_USER}
spring.datasource.password=${MY_PASSWORD}

#################################
# Google Vertex AI Gemini
#################################
spring.ai.vertex.ai.gemini.project-id=${VERTEX_AI_GEMINI_PROJECT_ID}
spring.ai.vertex.ai.gemini.location=${VERTEX_AI_GEMINI_LOCATION}
spring.ai.vertex.ai.gemini.chat.options.model=${VERTEX_AI_GEMINI_MODEL}
spring.ai.vertex.ai.gemini.transport=grpc

spring.threads.virtual.enabled=true

prompts.promptTransformTF=Your task is to translate shell \nscripts that utilize `gcloud` commands into equivalent, well-structured Terraform code, \nadhering to Terraform best practices for file organization and maintainability.\n\nPlease carefully analyze the provided bash script enclosed within triple back quotes ```%s``` \n\nYour output should include:\n\n1. **Terraform Code in Separate Files:**\n   * **main.tf:** A fully functional Terraform configuration file containing the core \n     infrastructure resource definitions that replicate the functionality of the bash script.\n   * **variables.tf:** This file should contain all input variable declarations used in \n     the `main.tf` file.\n   * **Additional Files (If Applicable):**  Suggest and create additional Terraform files \n     as needed (e.g., `outputs.tf`, `provider.tf`, `data.tf`) based on the complexity and \n     requirements of the converted script.\n\n2. **Explanation:** A clear breakdown of the Terraform resources, variables, and modules \n   used, along with explanations for how they achieve the same results as the original script.\n   Indicate which file each element belongs to.\n\n3. **Best Practices:** Where applicable, offer suggestions for adhering to Terraform best \n   practices beyond file organization (e.g., resource naming, input validation, module usage).\n\n4. **Potential Optimizations:** If there are opportunities to make the Terraform code more \n   efficient, concise, or maintainable, please highlight them.\n\n**Important Considerations:**\n\n* **Environment Variables:** If the bash script relies on environment variables, ensure the \n   Terraform code handles them appropriately (e.g., using input variables in `variables.tf`).\n* **Error Handling:** Terraform provides error handling mechanisms that may be missing in the \n   bash script. Incorporate these to improve the robustness of the code.\n* **State Management:** Briefly explain how Terraform state would be managed for this particular \n   configuration.\n* **Example Usage:** Demonstrates how to apply Terraform script.\n* **Reference Documentation:** Output should also consider the following document enclosed within triple back quotes for best practice:\n```%s```